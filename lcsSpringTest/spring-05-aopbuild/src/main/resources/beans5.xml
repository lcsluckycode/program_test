<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tool="http://www.springframework.org/schema/tool"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd">

    <bean id="userService" class="com.lcs.service.UserServiceImpl"/>
    <bean id="log" class="com.lcs.log.Log"/>
    <bean id="afterLog" class="com.lcs.log.AfterLog"/>

    <!--    方法一：使用原生的Spring API代理接口-->
    <!--    配置aop需要导入aop的约束-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;        切入点：expression：表达式，execution(要执行的位置？ * * * *)&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.lcs.service.UserServiceImpl.*(..))"/>-->

<!--        &lt;!&ndash;        执行环绕增加&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

<!--    方式二：自定义类实现-->
    <bean id="diy" class="com.lcs.diy.DiyPointCut"/>

<!--    <aop:config>-->
<!--&lt;!&ndash;        自定义切面， ref 要引用的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--&lt;!&ndash;            切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.lcs.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;            通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

<!--    方式三-->
    <bean id="annotationPointCut" class="com.lcs.diy.AnnotationPointCut"/>
<!--    开启自动注解支持  JDK(默认proxy-target-class="false")  cglib-->
    <aop:aspectj-autoproxy proxy-target-class="false"/>
</beans>